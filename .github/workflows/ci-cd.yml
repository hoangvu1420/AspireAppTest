# .github/workflows/ci-cd.yml
name: CI/CD to Azure Container Apps (with .NET Aspire and azd)

on:
  push:
    branches:
      - main

env:
  AZURE_CONTAINER_REGISTRY_NAME: ${{ secrets.ACR_NAME }} # Rename for clarity, though ACR_NAME works
  AZURE_RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP }} # Rename for clarity
  AZURE_LOCATION: eastus # Or your desired Azure region
  AZURE_ENVIRONMENT_NAME: aspire-env-${{ github.run_number }} # Unique environment name for azd

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure Developer CLI (azd)
        run: |
          curl -sSL https://aka.ms/azd/install.sh | bash

      - name: Restore, Build, and Deploy with azd
        run: |
          # Initialize azd for your project if not already done.
          # This step is crucial for azd to understand your Aspire app structure.
          # You might have an azure.yaml in your root already if you ran azd init locally.
          # If not, azd init will create it. Choose "Use code in the current directory" and confirm Aspire AppHost.
          azd init --service AspireAppTest.AppHost --template . --no-prompt

          # Provision and deploy all services defined in your Aspire AppHost
          # This command will:
          #   - Create Azure resources (Container Apps environment, ACR, etc.) if they don't exist.
          #   - Build container images for your Aspire projects (ApiService, WebFrontend)
          #   - Push images to the ACR.
          #   - Deploy Container Apps based on your Aspire configuration.
          azd up --environment ${{ env.AZURE_ENVIRONMENT_NAME }} \
                 --location ${{ env.AZURE_LOCATION }} \
                 --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
                 --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
                 --force-image-build # Ensures new images are built on each run
        working-directory: ./AspireAppTest.AppHost # Run azd from your AppHost directory
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # You'll need this secret

      - name: Get Azure Container App URLs
        run: |
          azd env get-values --output json > azd-env.json
          WEB_FRONTEND_URL=$(jq -r '.["WEB_FRONTEND_URL"]' azd-env.json)
          API_SERVICE_URL=$(jq -r '.["API_SERVICE_URL"]' azd-env.json) # Check the exact name azd uses for this output

          echo "WebFrontend URL: $WEB_FRONTEND_URL"
          echo "ApiService URL: $API_SERVICE_URL"
        working-directory: ./AspireAppTest.AppHost